library(poppr)
library(dplyr)
install.packages("hierfstat")
install.packages("reshape2")
install.packages("ggplot2")
install.packages("RColorBrewer")
install.packages("scales")
library(hierfstat)
library(learnPopGen)
library(reshape2)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster, idvar= c("ID", "Site"), timevar = "Locus", direction= "wide", sep="")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno<-lobster_wide[, 3:ncol(lobster_wide)]
snps_to_remove<-c("25580", "32362","41521","53889","65379","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpgeno<- snpgeno[ !colnames(snpgeno)%n% snps_to_remove]
snpgeno<- snpgeno[, !colnames(snpgeno)%n% snps_to_remove]
snpgeno<- snpgeno[, !colnames(snpgeno)%in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
ind <- as.character(lobster_wide$ID)
site<- as.character(lobster_wide$Site)
source("~/task05.R")
source("~/task05.R")
source("~/task05.R")
lobster_gen<- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
lobster_gen<-missingno(lobster_gen, type="geno", cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for (i in dups_lobster){
if(length(dups_lobster[i]>1)
lob_dups[x]<- i
x<-x+1
}
if(length(dups_lobster[i]>1){
if(length(dups_lobster[i])>1{
if(length(dups_lobster[i])>1
lob_dups[x]<- i
lob_dups[x]<-i
x<-x+1
}
for (i in dups_lobster){
if(length(dups_lobster[i])>1{
for (i in dups_lobster){
if(length(dups_lobster[i])>1
lob_dups[x]<-i
}
for (i in dups_lobster){
if(length(dups_lobster[i]) >1
lob_dups[x]<-i
for (i in dups_lobster){
if(length(dups_lobster[i]) >1{
for (i in dups_lobster){
if (length(dups_lobster[i]) >1){
lob_dups[x]<-i
x<-x+1
}
for (i in dups_lobster){
if (length(dups_lobster[i]) >1){
lob_dups[x]<-i
x<-x+1
}
}
source("~/task05.R")
for (i in dups_lobster){
if (length(dups_lobster[i]) >1){
lob_dups[x]<-i
x<-x+1
}
}
lob_Nodups<- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
source("~/task05.R")
for (i in dups_lobster){
if (length(dups_lobster[i])>1){
lob_dups[x]<-i
x<-x+1
}
}
lob_Nodups<- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
lobster_gen<-lobster_gen[lob_Nodups, ]
summary(lobster_gen$pop)
basic_lobster<-basic.stats(lobster_gen, diploid=TRUE)
basic_lobster<-basic. stats(lobster_gen, diploid=TRUE)
basic_lobster <- basic. stats(lobster_gen, diploid=TRUE)
basic _lobster <- basic.stats(lobster_gen, diploid=TRUE)
basic_lobster<- basic.stats(lobster_gen, diploid=TRUE)
warnings()
x<- x+1
for (i in dups_lobster){
if (length(dups_lobster[i])>1){
lob_dups[x]<-i
x<- x+1
}
}
lob_Nodups<- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
lobster_gen<-lobster_gen[lob_Nodups, ]
summary(lobster_gen$pop)
basic_lobster<- basic.stats(lobster_gen, diploid=TRUE)
basic_lobster<- basic.stats(lobster_gen, diploid=TRUE)
library(stats4)
basic_lobster<- basic.stats(lobster_gen, diploid=TRUE)
install.packages("basic.stat")
basic_lobster<- basic.stats(lobster_gen, diploid=TRUE)
basic_lobster<- basic .stats(lobster_gen, diploid=TRUE)
library(learnPopGen)
coalescent.plot(n=10, ngen=20, colors=NULL)
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster, idvar=c("ID", "Site"), timevar = "Locus", direction= "wide", sep="")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno<-lobster_wide[, 3:ncol(lobster_wide)]
snps_to_remove<-c("25580", "32362","41521","53889","65379","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpgeno<- snpgeno[, !colnames(snpgeno)%in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site<- as.character(lobster_wide$Site)
lobster_gen<- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
lobster_gen<-missingno(lobster_gen, type="geno", cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for (i in dups_lobster){
if (length(dups_lobster[i])>1){
lob_dups[x]<-i
x<- x+1
}
}
lob_Nodups<- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
lobster_gen<-lobster_gen[lob_Nodups, ]
summary(lobster_gen$pop)
basic_lobster<- basic.stats(lobster_gen, diploid = TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho, MARGIN=2, FUN= mean, na. rm=TRUE), digits=3)
Ho_lobster<-round(apply(basic_lobster$Ho, MARGIN=2, FUN= mean,na.rm=TRUE), digits=3)
He_lobster<- round(apply(basic_lobster$Hs, MARGIN=2, FUN=mean,na.rm=TRUE), digits=3)
par(mar=c(4,4,1,1), las=1, mgp=c(2, 0.25, 0), tck=-0.005, cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab="expected H", ylab="observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
abline(0.1,lty=3)
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
Fis<-apply(basic_lobster$Fis, MARGIN=2, FUN=mean, na.rm=TRUE)
lobster_gen_sub<-popsub(lobster_gen, sublist=c("Ale","Ber","Brd","Pad", "Sar17","Vig"))
lobster_fst<-genet.dist(lobster_gen_sub, method="WC84") %>% round(digits=3)
lab_order<-c("Ber","Brd","Pad","Vig","Sar17","Ale")
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2), arr.ind=TRUE)
fst.df<- data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],Site2=dimnames(fst.mat2)[[1]][ind[,1]],Fst=fst.mat2[ind])
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2), arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]], Site2=dimnames(fst.mat2)[[1]][ind[,1]], Fst=fst.mat2[ind])
fst.df$Site1<-factor(fst.df$Site1, levels=unique(fst.df$Site1))
fst.df$Site2<-factor(fst.df$Site2, levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0]<-0
fst.label<-expression(italic("F")[ST])
mid<-max(fst.df$Fst)/2
ggplot(data=fst.df, aes(x=Site1, y=Site2, fill=Fst))+geom_title(colour="black")+geom_text(aes(label=Fst), color="black", size=3)+ scale_fill_gradient2(low="blue",mid="pink", high="red", midpoint=mid, name=fst.label, limits=c(0,max(fst.df$Fst)),breaks=c(0,0.05,0.10,0.15))+scale_x_discrete(expand=c(0,0))+scale_y_discrete(expand=c(0,0), position="right")+theme(axis.text=element_text(colour="black",soze=10,face="bold"), axis.title=element_blank(), panel.grid=element_blank(),panel.background=element_blank(),legend.position="right",legend.title=element_text(size=14, face="bold"),legend.text=element_text(size=10))
ggplot(data=fst.df, aes(x=Site1, y=Site2, fill=Fst))+geom_tile(colour="black")+geom_text(aes(label=Fst), color="black", size=3)+ scale_fill_gradient2(low="blue",mid="pink", high="red", midpoint=mid, name=fst.label, limits=c(0,max(fst.df$Fst)),breaks=c(0,0.05,0.10,0.15))+scale_x_discrete(expand=c(0,0))+scale_y_discrete(expand=c(0,0), position="right")+theme(axis.text=element_text(colour="black",soze=10,face="bold"), axis.title=element_blank(), panel.grid=element_blank(),panel.background=element_blank(),legend.position="right",legend.title=element_text(size=14, face="bold"),legend.text=element_text(size=10))
ggplot(data=fst.df, aes(x=Site1, y=Site2, fill=Fst))+geom_tile(colour="black")+geom_text(aes(label=Fst), color="black", size=3)+ scale_fill_gradient2(low="blue",mid="pink", high="red", midpoint=mid, name=fst.label, limits=c(0,max(fst.df$Fst)),breaks=c(0,0.05,0.10,0.15))+scale_x_discrete(expand=c(0,0))+scale_y_discrete(expand=c(0,0), position="right")+theme(axis.text=element_text(color="black",size=10,face="bold"), axis.title=element_blank(), panel.grid=element_blank(),panel.background=element_blank(),legend.position="right",legend.title=element_text(size=14, face="bold"),legend.text=element_text(size=10))
debugSource("~/task05.R")
d <- subset(d, d$grow > -0.1)
d <- read.table("dfr100.txt", header = T, sep = "\t")
debugSource("~/task05.R")
setwd("/Users/adammcmillion/Desktop/Evolution/Tasks/Task_09")
source("~/Desktop/Evolution/Tasks/Task_09/Task09.R")
library(diversitree)
install.packages("diversitree")
library(diversitree)
library(diversitree)
transition_0tol<-0.1
transition_1to0<-0.1
speciation_o<-0.2
extinction_0<-0.1
speciation_1<-0.2
extinction_1<-0.1
maxT<-50
library(tree.bisse)
install.packages("tree.bisse")
pars<-c(speciation_0,speciation_1,extinction_0,extinction_1,transition_0to1, transition_1to0)
speciation_0<-0.2
pars<-c(speciation_0,speciation_1,extinction_0,extinction_1,transition_0to1, transition_1to0)
transition_0to1<-0.1
pars<-c(speciation_0,speciation_1,extinction_0,extinction_1,transition_0to1, transition_1to0)
simTree<-tree.bisse(Pars, max.taxa=maxN, max.t=maxT)
Pars<-c(speciation_0,speciation_1,extinction_0,extinction_1,transition_0to1, transition_1to0)
simTree<-tree.bisse(Pars, max.taxa=maxN, max.t=maxT)
maxN<-1e3
maxT<-50
Pars<-c(speciation_0,speciation_1,extinction_0,extinction_1,transition_0to1, transition_1to0)
simTree<-tree.bisse(Pars, max.taxa=maxN, max.t=maxT)
str(simTree)
stateTable<-table(simTree$tip.state)
stateTable/sum(stateTable)
set.seed(2)
phy<-tree.bd(c(0,0.3),max.taxa=100)
DF1<-make.bd(phy)
phy<-tree.bd(c(1,0.3),max.taxa=100)
DF1<-make.bd(phy)
lik<-make.bd(phy)
lik<-make.bd(phy)
lik<-make.bisse(phy,states)
library(phytools)
phy<-tree.bd(c(1,0.3),max.taxa=100)
lik<-make.bd(phy)
df1<-make.bd(phy)
remove("lik")
argnames(df1)
phy2<-tree.bd(c(0,0.3),max.tax=100)
df1(c(1,0.03))
df1(c(1,.03), condition.surv = FALSE)
plot(phy,no.margin=TRUE,show.tip.label=FALSE)
fit<-find.mle(df1,c(.1,.03), method="subplex")
coef(fit)
logdf1(fit)
logLik(fit)
fit$lndf1
fit$lnLik
lik<-make.bd(phy)
argnames(lik)
phy2<-tree.bd(c(0,0.3),max.tax=100)
lik(c(1,0.03))
lik(c(1,.03), condition.surv = FALSE)
fit<-find.mle(lik,c(.1,.03), method="subplex")
coef(fit)
logLik(fit)
fit$lnLik
purebirth<-constrain(lik,mu~0)
fit.purbirth<-find.mle(purebirth, coef(fit)[1], method="subplex")
anova(fit, purebirth=fit.purebirth)
fit.purebirth<-find.mle(purebirth, coef(fit)[1], method="subplex")
anova(fit,purebirth=fit.purebirth)
set.seed(1)
samples<-mcmc(lik,fit$par,nsteps=10000,w=.1, print.every=0)
set.seed(1)
phy.sub<-drop.tip(phy,sample(100,25))
lik.sub<-make.bd(phy.sub,sampling.f=75/100)
fit.sub<-find.mle(lik.sub, c(0.1,0.03), method="subplex")
coef(fit.sub)
like.sub.purebirth<-constrain(lik.sub,mu=0)
like.sub.purebirth<-constrain(lik.sub,mu~0)
fit.sub.purebirth<-find.mle(lik.sub.purebirth,coef(fitsub)[1],method="subplex")
lik.sub.purebirth<-constrain(lik.sub,mu~0)
fit.sub.purebirth<-find.mle(lik.sub.purebirth,coef(fitsub)[1],method="subplex")
fit.sub<-find.mle(lik.sub, c(0.1,0.03), method="subplex")
coef(fit.sub)
lik.sub.purebirth<-constrain(lik.sub,mu~0)
fit.sub.purebirth<-find.mle(lik.sub.purebirth,coef(fitsub)[1],method="subplex")
fit.sub.purebirth<-find.mle(lik.sub.purebirth,coef(fit.sub)[1],method="subplex")
anova(fit.sub,purebirth=fit.sub.purebirth)
lik.sub.purebirth<-constrain(lik.sub,mu~0)
fit.sub.purebirth<-find.mle(lik.sub.purebirth,coef(fit.sub)[1],method="subplex")
anova(fit.sub,purebirth=fit.sub.purebirth)
fit.sub<-find.mle(lik.sub, c(0.1,0.03), method="subplex")
coef(fit.sub)
lik.sub.purebirth<-constrain(lik.sub,mu~0)
fit.sub.purebirth<-find.mle(lik.sub.purebirth,coef(fit.sub)[1],method="subplex")
anova(fit.sub,purebirth=fit.sub.purebirth)
anova(fit.sub.purebirth=fit.sub.purebirth)
anova(fit.sub,purebirth=fit.sub.purebirth)
samples$r<-samples$lambda-samples$mu
col<-c("#eaab07","#004","#618")
profiles.plot(samples[c("lamda","mu","r")], col.line=col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
profiles.plot(samples[c("lambda","mu","r")], col.line=col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
library(diversitree)
profiles.plot(samples[c("lambda","mu","r")], col.line=col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
source("~/Desktop/Evolution/Tasks/Task_09/Task09.R")
library(diversitree)
detach("package:adegenet", unload = TRUE)
library(diversitree)
transition_0to1<-0.1
transition_1to0<-0.1
speciation_0<-0.2
extinction_0<-0.1
speciation_1<-0.2
extinction_1<-0.1
maxN<-1e3
maxT<-50
Pars<-c(speciation_0,speciation_1,extinction_0,extinction_1,transition_0to1, transition_1to0)
simTree<-tree.bisse(Pars, max.taxa=maxN, max.t=maxT)
str(simTree)
stateTable<-table(simTree$tip.state)
stateTable/sum(stateTable)
set.seed(2)
phy<-tree.bd(c(1,0.3),max.taxa=100)
lik<-make.bd(phy)
argnames(lik)
phy2<-tree.bd(c(0,0.3),max.tax=100)
lik(c(1,0.03))
lik(c(1,.03), condition.surv = FALSE)
plot(phy,no.margin=TRUE,show.tip.label=FALSE)
fit<-find.mle(lik,c(.1,.03), method="subplex")
coef(fit)
logLik(fit)
fit$lnLik
purebirth<-constrain(lik,mu~0)
fit.purebirth<-find.mle(purebirth, coef(fit)[1], method="subplex")
anova(fit,purebirth=fit.purebirth)
set.seed(1)
samples<-mcmc(lik,fit$par,nsteps=10000,w=.1, print.every=0)
set.seed(1)
phy.sub<-drop.tip(phy,sample(100,25))
lik.sub<-make.bd(phy.sub,sampling.f=75/100)
fit.sub<-find.mle(lik.sub, c(0.1,0.03), method="subplex")
coef(fit.sub)
lik.sub.purebirth<-constrain(lik.sub,mu~0)
fit.sub.purebirth<-find.mle(lik.sub.purebirth,coef(fit.sub)[1],method="subplex")
anova(fit.sub,purebirth=fit.sub.purebirth)
samples$r<-samples$lambda-samples$mu
col<-c("#eaab07","#004","#618")
profiles.plot(samples[c("lambda","mu","r")], col.line=col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
Col<-c("#eaab07","#004","#618")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
Col<-c("orange","blue","red")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.03,0.07), col=Col,lty=2)
pars<-c(0.1,0.2,0.03,0.03,0.01,0.01)
set.seed(4)
phy<-tree.bissee(pars,max.t=30,x0=0)
phy<-tree.bissee(pars,max.t=30,x=0)
library(phytools)
phy<-tree.bissee(pars,max.t=30,x=0)
phy<-tree.bisse(pars,max.t=30,x=0)
states<-phy$tip.state
head(states)
lik<-make.bisse(phy,states)
lik(pars)
p<-starting.point.bisse(phy)
p
fit<-find.mle(lik,p)
fit$lnLik
round(coef(fit),3)
par(mar=rep(0,4))
col<-c("red", "blue")
plot(history.from.sim.discrete(phy,0:1),phy, col=Col)
source("~/Desktop/Evolution/Tasks/Task_09/Task09.R")
tree<-rtree(n=5,rooted=TRUE,top.label=NULL)
tree<-rtree(n=5,rooted=TRUE,tip.label=NULL)
plot(tree)
tree<-rtree(n=30,rooted=TRUE, TRUE,tip.label=NULL)
plot(tree)
str(simTree)
library(phytools)
set.seed(3)
tree2<-pbtree(b=1,d=3, n=50)
plotTree(tree2)
library(diversitree)
set.seed(10)
phy<-tree.bisse(pars,max.t=30,x0=0)
plot(phy)
pars<-c(1,0.3,0.4,1,0.01,0.2)
set.seed(5)
phy2<-trees(pars, "bisse",max.taxa=70,max.t=Inf,x0=0)[[1]]
set.seed(3)
phy3<-tree.musse(Pars, 30,x0=1)
plot(phy3)
source("~/Desktop/Evolution/Tasks/Task_09/Task09.R")
library(diversitree)
transition_0to1<-0.1
transition_1to0<-0.1
speciation_0<-0.2
extinction_0<-0.1
speciation_1<-0.2
extinction_1<-0.1
maxN<-1e3
maxT<-50
Pars<-c(speciation_0,speciation_1,extinction_0,extinction_1,transition_0to1, transition_1to0)
simTree<-tree.bisse(Pars, max.taxa=maxN, max.t=maxT)
str(simTree)
stateTable<-table(simTree$tip.state)
stateTable/sum(stateTable)
set.seed(2)
phy<-tree.bd(c(1,0.3),max.taxa=100)
lik<-make.bd(phy)
argnames(lik)
phy2<-tree.bd(c(0,0.3),max.tax=100)
lik(c(1,0.03))
lik(c(1,.03), condition.surv = FALSE)
plot(phy,no.margin=TRUE,show.tip.label=FALSE)
fit<-find.mle(lik,c(.1,.03), method="subplex")
coef(fit)
logLik(fit)
fit$lnLik
purebirth<-constrain(lik,mu~0)
fit.purebirth<-find.mle(purebirth, coef(fit)[1], method="subplex")
anova(fit,purebirth=fit.purebirth)
set.seed(1)
samples<-mcmc(lik,fit$par,nsteps=10000,w=.1, print.every=0)
set.seed(1)
phy.sub<-drop.tip(phy,sample(100,25))
lik.sub<-make.bd(phy.sub,sampling.f=75/100)
fit.sub<-find.mle(lik.sub, c(0.1,0.03), method="subplex")
coef(fit.sub)
lik.sub.purebirth<-constrain(lik.sub,mu~0)
fit.sub.purebirth<-find.mle(lik.sub.purebirth,coef(fit.sub)[1],method="subplex")
anova(fit.sub,purebirth=fit.sub.purebirth)
samples$r<-samples$lambda-samples$mu
Col<-c("orange","blue","red")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.03,0.07), col=Col,lty=2)
pars<-c(0.1,0.2,0.03,0.03,0.01,0.01)
set.seed(4)
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
Col<-c("orange","black","red")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.03,0.07), col=Col,lty=2)
pars<-c(0.1,0.2,0.03,0.03,0.01,0.01)
abline(v=c(.1,.07,0.07), col=Col,lty=2)
Col<-c("orange","black","red")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.07,0.07), col=Col,lty=2)
pars<-c(0.1,0.2,0.03,0.03,0.01,0.01)
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="parameter estimate", ylab="probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.01,0.09), col=Col,lty=2)
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="parameter estimate", ylab="probability density", aplha=.75,legend.pos="topright")
abline(v=c(.1,.01,0.09), col=Col,lty=2)
pars<-c(0.1,0.2,0.03,0.03,0.01,0.01)
set.seed(4)
Col<-c("orange","black","red")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="Parameter estimate", ylab="Probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.01,0.09), col=Col,lty=2)
pars<-c(0.1,0.2,0.03,0.03,0.01,0.01)
library(plyr)
Col<-c("orange","black","red")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="Parameter estimate", ylab="Probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.01,0.09), col=Col,lty=2)
pars<-c(0.1,0.2,0.03,0.03,0.01,0.01)
install.packages(c("dplyr", "fontawesome", "gargle", "ggplot2", "igraph", "lattice", "Matrix", "processx", "ps", "quantreg", "RcppArmadillo", "segmented", "seqinr", "tinytex", "vctrs", "xfun"))
install.packages(c("dplyr", "fontawesome", "gargle", "ggplot2", "igraph", "lattice", "Matrix", "processx", "ps", "quantreg", "RcppArmadillo", "segmented", "seqinr", "tinytex", "vctrs", "xfun"))
install.packages(c("dplyr", "fontawesome", "gargle", "ggplot2", "igraph", "lattice", "Matrix", "processx", "ps", "quantreg", "RcppArmadillo", "segmented", "seqinr", "tinytex", "vctrs", "xfun"))
transition_0to1<-0.1
transition_1to0<-0.1
speciation_0<-0.2
extinction_0<-0.1
speciation_1<-0.2
extinction_1<-0.1
maxN<-1e3
maxT<-50
Pars<-c(speciation_0,speciation_1,extinction_0,extinction_1,transition_0to1, transition_1to0)
simTree<-tree.bisse(Pars, max.taxa=maxN, max.t=maxT)
str(simTree)
stateTable<-table(simTree$tip.state)
stateTable/sum(stateTable)
set.seed(2)
phy<-tree.bd(c(1,0.3),max.taxa=100)
lik<-make.bd(phy)
argnames(lik)
phy2<-tree.bd(c(0,0.3),max.tax=100)
lik(c(1,0.03))
lik(c(1,.03), condition.surv = FALSE)
plot(phy,no.margin=TRUE,show.tip.label=FALSE)
fit<-find.mle(lik,c(.1,.03), method="subplex")
coef(fit)
logLik(fit)
fit$lnLik
purebirth<-constrain(lik,mu~0)
fit.purebirth<-find.mle(purebirth, coef(fit)[1], method="subplex")
anova(fit,purebirth=fit.purebirth)
set.seed(1)
samples<-mcmc(lik,fit$par,nsteps=10000,w=.1, print.every=0)
set.seed(1)
phy.sub<-drop.tip(phy,sample(100,25))
lik.sub<-make.bd(phy.sub,sampling.f=75/100)
fit.sub<-find.mle(lik.sub, c(0.1,0.03), method="subplex")
coef(fit.sub)
lik.sub.purebirth<-constrain(lik.sub,mu~0)
fit.sub.purebirth<-find.mle(lik.sub.purebirth,coef(fit.sub)[1],method="subplex")
anova(fit.sub,purebirth=fit.sub.purebirth)
samples$r<-samples$lambda-samples$mu
Col<-c("orange","black","red")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="Parameter estimate", ylab="Probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.01,0.09), col=Col,lty=2)
pars<-c(0.1,0.2,0.03,0.03,0.01,0.01)
pdf("09_plot.pdf")
Col<-c("orange","black","red")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="Parameter estimate", ylab="Probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.01,0.09), col=Col,lty=2)
pars<-c(0.1,0.2,0.03,0.03,0.01,0.01)
dev.off()
pdf("09_plot.pdf")
Col<-c("orange","black","red")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="Parameter estimate", ylab="Probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.01,0.09), col=Col,lty=2)
pars<-c(0.1,0.2,0.03,0.03,0.01,0.01)
dev.off()
library(diversitree)
detach("package:adegenet", unload = TRUE)
library(diversitree)
pdf("09_plot.pdf")
Col<-c("orange","black","red")
profiles.plot(samples[c("lambda","mu","r")], col.line=Col, las=1, xlab="Parameter estimate", ylab="Probability density", alpha=.75,legend.pos="topright")
abline(v=c(.1,.01,0.09), col=Col,lty=2)
dev.off()
source("~/Desktop/Evolution/Tasks/Task_09/Task09.R")
par(mar=rep(0,4))
col<-c("red", "blue")
plot(history.from.sim.discrete(phy,0:1),phy, col=Col)
source("~/Desktop/Evolution/Tasks/Task_09/Task09.R")
source("~/Desktop/Evolution/Tasks/Task_09/Task09.R")
