snpgeno<- snpgeno[ !colnames(snpgeno)%n% snps_to_remove]
snpgeno<- snpgeno[, !colnames(snpgeno)%n% snps_to_remove]
snpgeno<- snpgeno[, !colnames(snpgeno)%in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
ind <- as.character(lobster_wide$ID)
site<- as.character(lobster_wide$Site)
source("~/task05.R")
source("~/task05.R")
source("~/task05.R")
lobster_gen<- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
lobster_gen<-missingno(lobster_gen, type="geno", cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for (i in dups_lobster){
if(length(dups_lobster[i]>1)
lob_dups[x]<- i
x<-x+1
}
if(length(dups_lobster[i]>1){
if(length(dups_lobster[i])>1{
if(length(dups_lobster[i])>1
lob_dups[x]<- i
lob_dups[x]<-i
x<-x+1
}
for (i in dups_lobster){
if(length(dups_lobster[i])>1{
for (i in dups_lobster){
if(length(dups_lobster[i])>1
lob_dups[x]<-i
}
for (i in dups_lobster){
if(length(dups_lobster[i]) >1
lob_dups[x]<-i
for (i in dups_lobster){
if(length(dups_lobster[i]) >1{
for (i in dups_lobster){
if (length(dups_lobster[i]) >1){
lob_dups[x]<-i
x<-x+1
}
for (i in dups_lobster){
if (length(dups_lobster[i]) >1){
lob_dups[x]<-i
x<-x+1
}
}
source("~/task05.R")
for (i in dups_lobster){
if (length(dups_lobster[i]) >1){
lob_dups[x]<-i
x<-x+1
}
}
lob_Nodups<- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
source("~/task05.R")
for (i in dups_lobster){
if (length(dups_lobster[i])>1){
lob_dups[x]<-i
x<-x+1
}
}
lob_Nodups<- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
lobster_gen<-lobster_gen[lob_Nodups, ]
summary(lobster_gen$pop)
basic_lobster<-basic.stats(lobster_gen, diploid=TRUE)
basic_lobster<-basic. stats(lobster_gen, diploid=TRUE)
basic_lobster <- basic. stats(lobster_gen, diploid=TRUE)
basic _lobster <- basic.stats(lobster_gen, diploid=TRUE)
basic_lobster<- basic.stats(lobster_gen, diploid=TRUE)
warnings()
x<- x+1
for (i in dups_lobster){
if (length(dups_lobster[i])>1){
lob_dups[x]<-i
x<- x+1
}
}
lob_Nodups<- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
lobster_gen<-lobster_gen[lob_Nodups, ]
summary(lobster_gen$pop)
basic_lobster<- basic.stats(lobster_gen, diploid=TRUE)
basic_lobster<- basic.stats(lobster_gen, diploid=TRUE)
library(stats4)
basic_lobster<- basic.stats(lobster_gen, diploid=TRUE)
install.packages("basic.stat")
basic_lobster<- basic.stats(lobster_gen, diploid=TRUE)
basic_lobster<- basic .stats(lobster_gen, diploid=TRUE)
library(learnPopGen)
coalescent.plot(n=10, ngen=20, colors=NULL)
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster, idvar=c("ID", "Site"), timevar = "Locus", direction= "wide", sep="")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno<-lobster_wide[, 3:ncol(lobster_wide)]
snps_to_remove<-c("25580", "32362","41521","53889","65379","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpgeno<- snpgeno[, !colnames(snpgeno)%in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site<- as.character(lobster_wide$Site)
lobster_gen<- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
lobster_gen<-missingno(lobster_gen, type="geno", cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for (i in dups_lobster){
if (length(dups_lobster[i])>1){
lob_dups[x]<-i
x<- x+1
}
}
lob_Nodups<- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
lobster_gen<-lobster_gen[lob_Nodups, ]
summary(lobster_gen$pop)
basic_lobster<- basic.stats(lobster_gen, diploid = TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho, MARGIN=2, FUN= mean, na. rm=TRUE), digits=3)
Ho_lobster<-round(apply(basic_lobster$Ho, MARGIN=2, FUN= mean,na.rm=TRUE), digits=3)
He_lobster<- round(apply(basic_lobster$Hs, MARGIN=2, FUN=mean,na.rm=TRUE), digits=3)
par(mar=c(4,4,1,1), las=1, mgp=c(2, 0.25, 0), tck=-0.005, cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab="expected H", ylab="observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
abline(0.1,lty=3)
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
Fis<-apply(basic_lobster$Fis, MARGIN=2, FUN=mean, na.rm=TRUE)
lobster_gen_sub<-popsub(lobster_gen, sublist=c("Ale","Ber","Brd","Pad", "Sar17","Vig"))
lobster_fst<-genet.dist(lobster_gen_sub, method="WC84") %>% round(digits=3)
lab_order<-c("Ber","Brd","Pad","Vig","Sar17","Ale")
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2), arr.ind=TRUE)
fst.df<- data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],Site2=dimnames(fst.mat2)[[1]][ind[,1]],Fst=fst.mat2[ind])
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2), arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]], Site2=dimnames(fst.mat2)[[1]][ind[,1]], Fst=fst.mat2[ind])
fst.df$Site1<-factor(fst.df$Site1, levels=unique(fst.df$Site1))
fst.df$Site2<-factor(fst.df$Site2, levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0]<-0
fst.label<-expression(italic("F")[ST])
mid<-max(fst.df$Fst)/2
ggplot(data=fst.df, aes(x=Site1, y=Site2, fill=Fst))+geom_title(colour="black")+geom_text(aes(label=Fst), color="black", size=3)+ scale_fill_gradient2(low="blue",mid="pink", high="red", midpoint=mid, name=fst.label, limits=c(0,max(fst.df$Fst)),breaks=c(0,0.05,0.10,0.15))+scale_x_discrete(expand=c(0,0))+scale_y_discrete(expand=c(0,0), position="right")+theme(axis.text=element_text(colour="black",soze=10,face="bold"), axis.title=element_blank(), panel.grid=element_blank(),panel.background=element_blank(),legend.position="right",legend.title=element_text(size=14, face="bold"),legend.text=element_text(size=10))
ggplot(data=fst.df, aes(x=Site1, y=Site2, fill=Fst))+geom_tile(colour="black")+geom_text(aes(label=Fst), color="black", size=3)+ scale_fill_gradient2(low="blue",mid="pink", high="red", midpoint=mid, name=fst.label, limits=c(0,max(fst.df$Fst)),breaks=c(0,0.05,0.10,0.15))+scale_x_discrete(expand=c(0,0))+scale_y_discrete(expand=c(0,0), position="right")+theme(axis.text=element_text(colour="black",soze=10,face="bold"), axis.title=element_blank(), panel.grid=element_blank(),panel.background=element_blank(),legend.position="right",legend.title=element_text(size=14, face="bold"),legend.text=element_text(size=10))
ggplot(data=fst.df, aes(x=Site1, y=Site2, fill=Fst))+geom_tile(colour="black")+geom_text(aes(label=Fst), color="black", size=3)+ scale_fill_gradient2(low="blue",mid="pink", high="red", midpoint=mid, name=fst.label, limits=c(0,max(fst.df$Fst)),breaks=c(0,0.05,0.10,0.15))+scale_x_discrete(expand=c(0,0))+scale_y_discrete(expand=c(0,0), position="right")+theme(axis.text=element_text(color="black",size=10,face="bold"), axis.title=element_blank(), panel.grid=element_blank(),panel.background=element_blank(),legend.position="right",legend.title=element_text(size=14, face="bold"),legend.text=element_text(size=10))
debugSource("~/task05.R")
d <- subset(d, d$grow > -0.1)
d <- read.table("dfr100.txt", header = T, sep = "\t")
debugSource("~/task05.R")
par(las=1, mar=c(3,4,1,1))
boxplot(Tree_DBH$DBH1, Tree_DBH$DBH2, boxwex=0.25, col=c("blue","black"), border="gray", names=c("DBH1", "DBH2"))
setwd("/Users/adammcmillion/Desktop/Evolution/Tasks/Project/Data")
read.csv("Treedataset.csv")
Tree_DBH<-read.csv("Treedataset.csv")
par(las=1, mar=c(3,4,1,1))
boxplot(Tree_DBH$DBH1, Tree_DBH$DBH2, boxwex=0.25, col=c("blue","black"), border="gray", names=c("DBH1", "DBH2"))
setwd("/Users/adammcmillion/Desktop/Evolution/Tasks/Project/Data")
setwd("/Users/adammcmillion/Desktop/Evolution/Tasks/Project/Data")
read.csv("Myrtaceae")
read.csv("Myrtaceae.csv")
Myrtaceae<-read.csv("Myrtaceae.csv")
setwd("/Users/adammcmillion/Desktop/Evolution/Tasks/Project/Data")
read.csv("Myrtaceae.csv")
Myrtaceae<-read.csv("Myrtaceae.csv")
boxplot(Myrtaceae$Dbh1, Myrtaceae$Dbh2, boxwex=0.25, col=c("blue","black"), border="gray", names=c("Dbh1", "Dbh2"))
par(las=1, mar=c(3,4,1,1))
hist(Myrtaceae$Dbh1,Myrtaceae$Dbh2 col='black', border='white', main="", xlab="change in DBH", xlim=c(-2,1))
hist(Myrtaceae$Dbh1,Myrtaceae$Dbh2) col='black', border='white', main="", xlab="change in DBH", xlim=c(-2,1))
hist(Myrtaceae$Dbh1,Myrtaceae$Dbh2, col='black', border='white', main="", xlab="change in DBH", xlim=c(-2,1))
par(las=1, mar=c(3,4,1,1))
hist(Tree_DBH$DBH2-Tree_DBH$DBH1, col='black', border='white', main="", xlab="change in DBH", xlim=c(-2,1))
setwd("/Users/adammcmillion/Desktop/Evolution/Tasks/Project/Data")
read.csv("Treedataset.csv")
Tree_DBH<-read.csv("Treedataset.csv")
par(las=1, mar=c(3,4,1,1))
hist(Tree_DBH$DBH2-Tree_DBH$DBH1, col='black', border='white', main="", xlab="change in DBH", xlim=c(-2,1))
plot(Tree_DBH$Time, Tree_DBH$DBH1, pch=16, col="blue")
points(Tree_DBH$Time, Tree_DBH$DBH2, pch=16, col='black')
hist(Myrtaceae$Dbh1-Myrtaceae$Dbh2, col='black', border='white', main="", xlab="change in DBH", xlim=c(-2,1))
hist(Myrtaceae$Dbh1-Myrtaceae$Dbh2, col=c('black','red', border='white', main="", xlab="change in DBH", xlim=c(-2,1))
par(las=1, mar=c(3,4,1,1))
hist(Myrtaceae$Dbh1-Myrtaceae$Dbh2, col=c('black','red'), border='white', main="", xlab="change in DBH", xlim=c(-2,1))
plot(Myrtaceae$Cd, Myrtaceae$Dbh1, pch=16, col="blue")
plot(Myrtaceae$Cd, Myrtaceae$Dbh1, pch=16, col="blue")
points(Myrtaceae$Cd, Myrtaceae$Dbh2, pch=16, col='black')
plot(Myrtaceae$Cd, Myrtaceae$Dbh1, pch=16, col="blue")
plot(Myrtaceae$Time, Myrtaceae$Dbh1, pch=16, col="blue")
points(Myrtaceae$Time, Myrtaceae$Dbh2, pch=16, col='black')
points(Myrtaceae$Time, Myrtaceae$Dbh2, pch=16, col=Cd)
plot(Myrtaceae$Time, Myrtaceae$Dbh1, pch=16, col=Cd)
points(Myrtaceae$Time, Myrtaceae$Dbh2, pch=16, col=Cd)
View(Myrtaceae)
plot(Myrtaceae$Time, Myrtaceae$Dbh1, pch=16, col='Cd'')
plot(Myrtaceae$Time, Myrtaceae$Dbh1, pch=16, col='Cd')
points(Myrtaceae$Time, Myrtaceae$Dbh2, pch=16, col='Cd')
ggplot(Myrtaceae,aes(Time,Dbh1))+
geom_point(size=3)+
aes(colour=Family)+
labs(title="Tree DBH1")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")
library(ggplot2)
ggplot(Myrtaceae,aes(Time,Dbh1))+
geom_point(size=3)+
aes(colour=Family)+
labs(title="Tree DBH1")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")
ggplot(Myrtaceae,aes(Time,Dbh1))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Tree DBH1")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")
ggplot(Myrtaceae,aes(Time,Dbh1))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH1")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")+
facet_wrap(~Cd)
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")+
facet_wrap(~Myrtaceae)
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")+
facet_wrap(~Dbh1)
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
#theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
facet_wrap(~Cd)
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
geom_smooth()
ggplot(Myrtaceae,aes(Time,Dbh2))+
ggplot(Myrtaceae,aes(Time,Dbh2))
ggplot(Myrtaceae,aes(Time,Dbh2))+
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")+
ggplot(Myrtaceae,aes(Time,Dbh2))
ggplot(Myrtaceae,aes(Time,Dbh2))
geom_point(size=3)
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")+
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")
ggplot(Myrtaceae,aes(Time,Dbh2))+
geom_point(size=3)+
aes(colour=Cd)+
labs(title="Myrtaceae DBH2")+
theme_linedraw()+
theme(legend.key.size = unit(1,'cm'),
legend.key.height = unit(1,'cm'),
legend.key.width = unit(1,'cm'),
legend.title=element_text(size=7),
legend.text=element_text(size=6))+
theme(legend.position = "bottom")
ggplot(Myrtaceae$Dbh2-Myrtaceae$Dbh1)
ggplot(Myrtaceae,aes(Time, Dbh1))
ggplot(Myrtaceae,aes(Time, Dbh1))+
geom_histogram(Myrtaceae$Dbh2-Myrtaceae$Dbh1, col=Cd)
hist.default(Myrtaceae)
hist(CD,xlim=c(0,10),ylim=c(0,2), breaks=seq(min(CD), max(CD), length=20), xlab="Time", ylab="DBH1", main="Tree DBH", prob=TRUE, col="blue")
hist(Cd,xlim=c(0,10),ylim=c(0,2), breaks=seq(min(CD), max(CD), length=20), xlab="Time", ylab="DBH1", main="Tree DBH", prob=TRUE, col="blue")
hist.default(Myrtaceae$Cd)
source("~/Desktop/Evolution/Tasks/task08.R")
setwd("/Users/adammcmillion/Desktop/Evolution/Tasks")
setwd("/Users/adammcmillion/Desktop/Evolution/Tasks")
library(phytools)
trees<-list()
births<-vector()
Fractions<-vector()
random<-c()
random2<-c()
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[1]]<-pbtree(b=births[i], d=(Fractions[i]), n=100)
random[[i]]<-births[i]
random2[[i]]<-(Fractions[i])
treelist[[i]]<-mean(trees[[i]]$edge.length)
}
treelist<-c()
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[1]]<-pbtree(b=births[i], d=(Fractions[i]), n=100)
random[[i]]<-births[i]
random2[[i]]<-(Fractions[i])
treelist[[i]]<-mean(trees[[i]]$edge.length)
}
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(b=births[i], d=(Fractions[i]), n=100)
random[[i]]<-births[i]
random2[[i]]<-(Fractions[i])
treelist[[i]]<-mean(trees[[i]]$edge.length)
}
pdf('Trees.pdf')
pdf('Trees.pdf')
plot(Trees[[i]])
plot(Trees[[i]])
plot(trees[[i]])
pdf('Trees.pdf')
plot(trees[[i]])
dev.off()
setwd("/Users/adammcmillion/Desktop/Evolution/Tasks/Task_08")
setwd("/Users/adammcmillion/Desktop/Evolution/Tasks/Task_08")
trees<-list()
births<-vector()
Fractions<-vector()
random<-c()
random2<-c()
> for(i in 1:100){
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[1]]<-pbtree(b=births[i], d=(Fractions[i]), n=100)
random[[i]]<-births[i]
random2[[i]]<-(Fractions[i])
treelist[[i]]<-mean(trees[[i]]$edge.length)
}
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(b=births[i], d=(Fractions[i]), n=100)
random[[i]]<-births[i]
random2[[i]]<-(Fractions[i])
treelist[[i]]<-mean(trees[[i]]$edge.length)
}
trees[[100]]$tip.label
sapply(trees,Ntip)
random3<-unlist(random)
head(tips)
tips<-log(sapply(trees,Ntip))
random3<-unlist(random)
head(tips)
trees<-list()
births<-vector()
Fractions<-vector()
random<-c()
random2<-c()
plot(trees[[i]])
plot(trees[[i]])
plot(trees[[i]])
trees<-list()
births<-vector()
Fractions<-vector()
random<-c()
random2<-c()
treelist<-c()
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(b=births[i], d(Fractions[i]*births[i]), n=100)
random[[i]]<-births[i]
random2[[i]]<-(Fractions[i])
treelist[[i]]<-mean(trees[[i]]$edge.length)
}
for(i in 1:100){
births[i]<-runif(1)
Fractions[i]<-runif(1)
trees[[i]]<-pbtree(b=births[i], d=(Fractions[i]*births[i]), n=100)
random[[i]]<-births[i]
random2[[i]]<-(Fractions[i])
treelist[[i]]<-mean(trees[[i]]$edge.length)
}
plot(trees[[i]])
library(phytools)
plot(trees[[i]])
help(phytools)
plot(trees[[i]])
pdf('Trees.pdf')
plot(trees[[i]])
dev.off()
sapply(trees,Ntip)
tips<-log(sapply(trees,Ntip))
random3<-unlist(random)
head(tips)
plot(tips, xlab="log of tips", ylab=" net diversification")
source("~/Desktop/Evolution/Tasks/Task_08/task08.R")
detach("package:phytools", unload = TRUE)
library(phytools)
source("~/Desktop/Evolution/Tasks/Task_08/task08.R")
