library(ggplot2)
x<-rnorm(100,mean=0,sd=4)
var(x)
mean(x)
y=((x*5)+2)+runif(100,0,0.1)
pdf("plot1.pdf")
plot(x,y)
abline(lm(y~x),col='orange')
dev.off()
coef(lm(y~x))
z<-c()
x<-rnorm(100,mean=5,sd=4)
for(i in 1:100){
z[i]<-runif(1)
y<-(x*z[i])+2+(rnorm(100,0:0.1))
l<-coef(lm(z[1:100]~y))
}
plot(z[1:100],y)
abline(lm(y~z[1:100]))
coef(lm(y~z))
pdf('plot2.pdf')
plot(c(z,-1.2996))
pdf('plot10.pdf')
plot(c(z,-1.2996))
dev.off()
library(ggplot2)
distance<-10000
door<-c('money','vacation','suprise')
Monty_hall<-function(times){
race<-sample(horse,replace=TRUE)
i=2:times
win_total<-ifelse(horse=='moeny',1,0)
lose_total<-ifelse(horse=='money',0,1)
win_prob<-cumsum(win_total)/i
lose_prob<-cumsum(lose_total)/i
results<-data.frame(i=i,door=door,win_total=win_total,lose_total=lose_total,win_prob=win_prob,lose_prob=lose_prob)
return(results)
}
results<-Monty_hall(times)
door<-c('money','vacation','suprise')
Monty_hall<-function(times){
race<-sample(horse,replace=TRUE)
i=2:times
win_total<-ifelse(door=='money',1,0)
lose_total<-ifelse(door=='money',0,1)
win_prob<-cumsum(win_total)/i
lose_prob<-cumsum(lose_total)/i
results<-data.frame(i=i,door=door,win_total=win_total,lose_total=lose_total,win_prob=win_prob,lose_prob=lose_prob)
return(results)
}
results<-Monty_hall(times)
game<-sample(door,replace=TRUE)
i=2:times
Monty_hall<-function(iteration){
game<-sample(door,replace=TRUE)
i=2:iteration
win_total<-ifelse(door=='money',1,0)
lose_total<-ifelse(door=='money',0,1)
win_prob<-cumsum(win_total)/i
lose_prob<-cumsum(lose_total)/i
results<-data.frame(i=i,door=door,win_total=win_total,lose_total=lose_total,win_prob=win_prob,lose_prob=lose_prob)
return(results)
}
results<-Monty_hall(times)
summary<-table(results$race)
df_summary<-data.frame(label=names(summary), count=matrix(summary))
print(df_summary)
barplot(c(sum(as.numeric(results$win_total)),sum(as.numeric(results$lose_total))), beside=TRUE,xlab="win",ylab="lose")
win_total<-ifelse(door=='money',1,0)
lose_total<-ifelse(door=='money',0,1)
win_prob<-cumsum(win_total)/i
lose_prob<-cumsum(lose_total)/i
results<-data.frame(i=i,door=door,win_total=win_total,lose_total=lose_total,win_prob=win_prob,lose_prob=lose_prob)
return(results)
results<-Monty_hall(times)
summary<-table(results$race)
df_summary<-data.frame(label=names(summary), count=matrix(summary))
print(df_summary)
barplot(c(sum(as.numeric(results$win_total)),sum(as.numeric(results$lose_total))), beside=TRUE,xlab="win",ylab="lose")
plot(c(z,-1.2996))
plot(c(z,-1.2996))
abline(lm(y~z[1:100]))
plot(c(z,-1.2996))
install.packages(meme.)
install.packages(memer)
install.packages("memery")
library(memery)
install.packages(showtext)
install.packages("showtext")
install.packages("showtextdb")
install.packages("showimage")
meme_gif()
meme_list
library(meme)
library(memery)
library(showimage)
library(memery)
pic1<-system.file("success.jpg",package='memery')
meme::meme(pic1,"coding","is fun!")
install.packages("meme")
pic1<-system.file("success.jpg",package='memery')
meme::meme(pic1,"coding","is fun!")
pic1<-system.file("success.jpg",package='meme')
meme::meme(pic1,"coding","is fun!")
meme_list
meme_list()
meme_gif()
pic1<-system.file("IsThisAPigeon.jpg",package='meme')
meme::meme(pic1,"coding","is fun!")
meme_get("IsThisAPigeon")
library(meme)
detach("package:memery", unload = TRUE)
meme_get("IsThisAPigeon")
meme_gif("IsThisAPigeon")
meme_save("IsThisAPigeon")
pic1<-system.file("IsThisAPigeon.jpg",package='meme')
meme::meme(pic1,"coding","is fun!")
library(tidyverse)
mememe::meme("IsThisAPigeon.jpg", "Natural selection at its finest") %>%
me
meme::meme("IsThisAPigeon.jpg", "Natural selection at its finest") %>%
me
meme::meme("IsThisAPigeon.jpg", "Natural selection at its finest") %>%
meme_save("Natural selection.jpg")
install.packages("memer")
memetheme()
library(grid)
mm<-meme(u, "Natural selection", "crazy!", size=.3, color='firebrick', bgcolor=NULL)
meme()
library(meme)
poc<-system.file("philosoraptor.jpg",package="memery")
txt<-c("what to call my R package", "perhaps...")
pic<-system.file("philosoraptor.jpg",package="memery")
txt<-c("what to call my R package", "perhaps...")
source("~/Desktop/Evolution/Tasks/Task_10/Task10.R")
source("~/Desktop/Evolution/Tasks/Task_10/Task10.R")
library(meme)
pic<-system.file("philosoraptor.jpg",package="memery")
txt<-c("what to call my R package", "perhaps...")
pic1<-system.file("philosoraptor.jpg",package='meme')
meme::meme(pic1,"coding","is fun!")
pic1<-system.file("Philosoraptor.jpg",package='meme')
meme::meme(pic1,"coding","is fun!")
pic<-system.file("Philosoraptor.jpg",package="memery")
txt<-c("what to call my R package", "perhaps...")
pic2<-system.file("Philosoraptor.jpg",package='meme')
meme::meme(pic2,"coding","is fun!")
pic2<-system.file("philosoraptor.jpg",package='meme')
meme::meme(pic2,"coding","is fun!")
meme::meme(pic2,"ooo","is fun!")
pic2<-system.file("philosoraptor.jpg",package='meme')
meme::meme(pic2,"ooo","is fun!")
library(magick)
tiger<-image_read_pdf('DODO.pdf',width=350)
DODO<-image_read_pdf('DODO.pdf',width=350)
DODO<-image_read_pdf("DODO.pdf",pages = NULL,density = 300,password = '')
DODO<-image_read("DODO.pdf",pages = NULL,density = 300,password = '')
DODO<-image_read("DODO.pdf",pages = NULL,density = 300,password = 'Evolution')
devtools::install_github("sctyner/memer")
library(phytools)
devtools::install_github("sctyner/memer")
source("~/Desktop/Evolution/Tasks/Task_10/Task10.R")
coef(lm(y~z))
plot(c(z,-1.484))
source("~/Desktop/Evolution/Tasks/Task_10/Task10.R")
pdf("plot1.pdf")
plot(x,y)
abline(lm(y~x),col='orange')
dev.off()
pdf("boxplotpdf")
barplot(c(sum(as.numeric(results$win_total)),sum(as.numeric(results$lose_total))), beside=TRUE,xlab="win",ylab="lose")
dev.off()
plot(x,y)
abline(lm(y~x),col='orange')
x<-rnorm(100,mean=0,sd=4)
var(x)
mean(x)
y=((x*5)+2)+runif(100,0,0.1)
pdf("plot1.pdf")
plot(x,y)
abline(lm(y~x),col='orange')
source("~/Desktop/Evolution/Tasks/Task_10/Task10.R")
